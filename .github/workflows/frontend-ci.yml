name: Frontend CI

# Run this workflow on push to main/develop and on pull requests
on:
  push:
    branches:
      - main
      - develop
      - poc-prosemirror-frontend
  pull_request:
  workflow_dispatch:

jobs:
  frontend-tests:
    name: Frontend Tests & Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # - name: Get Playwright version
      #   id: playwright-version
      #   run: echo "version=$(npm list @storybook/test-runner --depth=0 | grep @storybook/test-runner | sed 's/.*@//')" >> $GITHUB_OUTPUT
      #
      # - name: Cache Playwright browsers
      #   uses: actions/cache@v4
      #   id: playwright-cache
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
      #
      # - name: Install Playwright browsers
      #   if: steps.playwright-cache.outputs.cache-hit != 'true'
      #   run: npx playwright install --with-deps
      #
      # - name: Install Playwright system dependencies
      #   if: steps.playwright-cache.outputs.cache-hit == 'true'
      #   run: npx playwright install-deps

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type checking
        run: npm run type-check

      - name: Run Vitest tests
        run: npm run test -- --reporter=verbose --coverage

      # - name: Build Storybook
      #   run: yarn build-storybook --quiet
      #
      # - name: Serve Storybook and run tests
      #   run: |
      #     npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
      #       "npx http-server storybook-static --port 6006 --silent" \
      #       "npx wait-on tcp:127.0.0.1:6006 && npm run test:storybook --verbose"

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: frontend-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check build output
        run: |
          if [ ! -f "django_prosemirror/static/js/django-prosemirror.js" ]; then
            echo "Build failed: django-prosemirror.js not found"
            exit 1
          fi
          if [ ! -f "django_prosemirror/static/css/django-prosemirror.css" ]; then
            echo "Build failed: django-prosemirror.css not found"
            exit 1
          fi
          echo "Build successful: JS and CSS files generated"
